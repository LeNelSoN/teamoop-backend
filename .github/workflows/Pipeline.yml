name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - dev
  push:
    branches:
      - dev

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build and Test
        run: mvn clean package install --batch-mode --no-transfer-progress

      # - name: Verify JAR exists
      #   run: |
      #     if [ ! -f "target/*.jar" ]; then
      #       echo "Error: JAR file not found!"
      #       exit 1
      #     fi

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v3
        with:
          name: teamoop-backend-jar
          path: target/*SNAPSHOT.jar


  docker-build-and-push:
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Download JAR artifact
        uses: actions/download-artifact@v3
        with:
          name: teamoop-backend-jar
          
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: List files in root directory
        run: ls -l

      - name: Define tags
        id: vars
        run: |
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-8)
          DATE_TAG=$(date +"%Y%m%d%H%M")
          echo "IMAGE_TAG=v${DATE_TAG}-${SHORT_SHA}" >> $GITHUB_ENV

      - name: Build Docker Image
        run: |
          docker build --build-arg JAR_FILE=teamoop-0.0.1-SNAPSHOT.jar -t ghcr.io/${{ github.repository_owner }}/teamoop-backend:${{ env.IMAGE_TAG }} .
          docker tag ghcr.io/${{ github.repository_owner }}/teamoop-backend:${{ env.IMAGE_TAG }} ghcr.io/${{ github.repository_owner }}/teamoop-backend:latest

      - name: Verify Docker Image
        run: |
          if ! docker image inspect ghcr.io/${{ github.repository_owner }}/teamoop-backend:${{ env.IMAGE_TAG }} > /dev/null 2>&1; then
            echo "Error: Docker image not built!"
            exit 1
          fi

      - name: Test Docker Image
        run: |
          docker run --rm -d --name test-container ghcr.io/${{ github.repository_owner }}/teamoop-backend:${{ env.IMAGE_TAG }}
          sleep 5
          docker logs test-container
          docker stop test-container

      - name: Push Docker Image
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/teamoop-backend:${{ env.IMAGE_TAG }}
          docker push ghcr.io/${{ github.repository_owner }}/teamoop-backend:latest

      - name: Clean up local Docker images
        run: |
          docker rmi ghcr.io/${{ github.repository_owner }}/teamoop-backend:${{ env.IMAGE_TAG }} || true
          docker rmi ghcr.io/${{ github.repository_owner }}/teamoop-backend:latest || true
